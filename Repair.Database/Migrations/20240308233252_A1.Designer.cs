// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repair.Database;

#nullable disable

namespace Repair.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240308233252_A1")]
    partial class A1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repair.Database.Entities.Competance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreePar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Competances");
                });

            modelBuilder.Entity("Repair.Database.Entities.Delegation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreePar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GouvernoratId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GouvernoratId");

                    b.ToTable("Delegations");
                });

            modelBuilder.Entity("Repair.Database.Entities.Gouvernorat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreePar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gouvernorats");
                });

            modelBuilder.Entity("Repair.Database.Entities.ReparateurCompetance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompetanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UtilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompetanceId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("ReparateurCompetances");
                });

            modelBuilder.Entity("Repair.Database.Entities.Utilisateur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreePar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDeNaissance")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DelegationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumMaison")
                        .HasColumnType("int");

                    b.Property<int>("NumeroTelephone1")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroTelephone2")
                        .HasColumnType("int");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DelegationId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("Repair.Database.Entities.Delegation", b =>
                {
                    b.HasOne("Repair.Database.Entities.Gouvernorat", "Gouvernorat")
                        .WithMany("Delegations")
                        .HasForeignKey("GouvernoratId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gouvernorat");
                });

            modelBuilder.Entity("Repair.Database.Entities.ReparateurCompetance", b =>
                {
                    b.HasOne("Repair.Database.Entities.Competance", "Competances")
                        .WithMany("ReparateurCompetances")
                        .HasForeignKey("CompetanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Repair.Database.Entities.Utilisateur", "Utilisateurs")
                        .WithMany("ReparateurCompetances")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Competances");

                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("Repair.Database.Entities.Utilisateur", b =>
                {
                    b.HasOne("Repair.Database.Entities.Delegation", "Delegation")
                        .WithMany("Utilisateur")
                        .HasForeignKey("DelegationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Delegation");
                });

            modelBuilder.Entity("Repair.Database.Entities.Competance", b =>
                {
                    b.Navigation("ReparateurCompetances");
                });

            modelBuilder.Entity("Repair.Database.Entities.Delegation", b =>
                {
                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Repair.Database.Entities.Gouvernorat", b =>
                {
                    b.Navigation("Delegations");
                });

            modelBuilder.Entity("Repair.Database.Entities.Utilisateur", b =>
                {
                    b.Navigation("ReparateurCompetances");
                });
#pragma warning restore 612, 618
        }
    }
}
